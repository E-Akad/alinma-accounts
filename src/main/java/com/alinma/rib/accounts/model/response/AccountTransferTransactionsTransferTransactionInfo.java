/*
 * Account Transfer Transactions
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.alinma.rib.accounts.model.response;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

import java.time.LocalDate;

/**
 * AccountTransferTransactionsResponseAccountTransferTransactionsRsTransferTransactionListTransferTransactionInfo
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-01-05T16:29:04.058Z")
public class AccountTransferTransactionsTransferTransactionInfo {
  @SerializedName("transactionDate")
  private LocalDate transactionDate = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("type")
  private String type = null;

  @SerializedName("debit")
  private Double debit = null;

  @SerializedName("credit")
  private Double credit = null;

  @SerializedName("transactionTime")
  private String transactionTime = null;

  @SerializedName("amount")
  private Double amount = null;

  @SerializedName("TrnRefNum")
  private String trnRefNum = null;

  @SerializedName("memo")
  private String memo = null;

  @SerializedName("currency")
  private String currency = null;

  public AccountTransferTransactionsTransferTransactionInfo transactionDate(LocalDate transactionDate) {
    this.transactionDate = transactionDate;
    return this;
  }

   /**
   * Get transactionDate
   * @return transactionDate
  **/
  @ApiModelProperty(value = "")
  public LocalDate getTransactionDate() {
    return transactionDate;
  }

  public void setTransactionDate(LocalDate transactionDate) {
    this.transactionDate = transactionDate;
  }

  public AccountTransferTransactionsTransferTransactionInfo description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @ApiModelProperty(value = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public AccountTransferTransactionsTransferTransactionInfo type(String type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @ApiModelProperty(value = "")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }

  public AccountTransferTransactionsTransferTransactionInfo debit(Double debit) {
    this.debit = debit;
    return this;
  }

   /**
   * Get debit
   * @return debit
  **/
  @ApiModelProperty(value = "")
  public Double getDebit() {
    return debit;
  }

  public void setDebit(Double debit) {
    this.debit = debit;
  }

  public AccountTransferTransactionsTransferTransactionInfo credit(Double credit) {
    this.credit = credit;
    return this;
  }

   /**
   * Get credit
   * @return credit
  **/
  @ApiModelProperty(value = "")
  public Double getCredit() {
    return credit;
  }

  public void setCredit(Double credit) {
    this.credit = credit;
  }

  public AccountTransferTransactionsTransferTransactionInfo transactionTime(String transactionTime) {
    this.transactionTime = transactionTime;
    return this;
  }

   /**
   * Get transactionTime
   * @return transactionTime
  **/
  @ApiModelProperty(value = "")
  public String getTransactionTime() {
    return transactionTime;
  }

  public void setTransactionTime(String transactionTime) {
    this.transactionTime = transactionTime;
  }

  public AccountTransferTransactionsTransferTransactionInfo amount(Double amount) {
    this.amount = amount;
    return this;
  }

   /**
   * Get amount
   * @return amount
  **/
  @ApiModelProperty(value = "")
  public Double getAmount() {
    return amount;
  }

  public void setAmount(Double amount) {
    this.amount = amount;
  }

  public AccountTransferTransactionsTransferTransactionInfo trnRefNum(String trnRefNum) {
    this.trnRefNum = trnRefNum;
    return this;
  }

   /**
   * Get trnRefNum
   * @return trnRefNum
  **/
  @ApiModelProperty(value = "")
  public String getTrnRefNum() {
    return trnRefNum;
  }

  public void setTrnRefNum(String trnRefNum) {
    this.trnRefNum = trnRefNum;
  }

  public AccountTransferTransactionsTransferTransactionInfo memo(String memo) {
    this.memo = memo;
    return this;
  }

   /**
   * Get memo
   * @return memo
  **/
  @ApiModelProperty(value = "")
  public String getMemo() {
    return memo;
  }

  public void setMemo(String memo) {
    this.memo = memo;
  }

  public AccountTransferTransactionsTransferTransactionInfo currency(String currency) {
    this.currency = currency;
    return this;
  }

   /**
   * Get currency
   * @return currency
  **/
  @ApiModelProperty(value = "")
  public String getCurrency() {
    return currency;
  }

  public void setCurrency(String currency) {
    this.currency = currency;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AccountTransferTransactionsTransferTransactionInfo accountTransferTransactionsResponseAccountTransferTransactionsRsTransferTransactionListTransferTransactionInfo = (AccountTransferTransactionsTransferTransactionInfo) o;
    return Objects.equals(this.transactionDate, accountTransferTransactionsResponseAccountTransferTransactionsRsTransferTransactionListTransferTransactionInfo.transactionDate) &&
        Objects.equals(this.description, accountTransferTransactionsResponseAccountTransferTransactionsRsTransferTransactionListTransferTransactionInfo.description) &&
        Objects.equals(this.type, accountTransferTransactionsResponseAccountTransferTransactionsRsTransferTransactionListTransferTransactionInfo.type) &&
        Objects.equals(this.debit, accountTransferTransactionsResponseAccountTransferTransactionsRsTransferTransactionListTransferTransactionInfo.debit) &&
        Objects.equals(this.credit, accountTransferTransactionsResponseAccountTransferTransactionsRsTransferTransactionListTransferTransactionInfo.credit) &&
        Objects.equals(this.transactionTime, accountTransferTransactionsResponseAccountTransferTransactionsRsTransferTransactionListTransferTransactionInfo.transactionTime) &&
        Objects.equals(this.amount, accountTransferTransactionsResponseAccountTransferTransactionsRsTransferTransactionListTransferTransactionInfo.amount) &&
        Objects.equals(this.trnRefNum, accountTransferTransactionsResponseAccountTransferTransactionsRsTransferTransactionListTransferTransactionInfo.trnRefNum) &&
        Objects.equals(this.memo, accountTransferTransactionsResponseAccountTransferTransactionsRsTransferTransactionListTransferTransactionInfo.memo) &&
        Objects.equals(this.currency, accountTransferTransactionsResponseAccountTransferTransactionsRsTransferTransactionListTransferTransactionInfo.currency);
  }

  @Override
  public int hashCode() {
    return Objects.hash(transactionDate, description, type, debit, credit, transactionTime, amount, trnRefNum, memo, currency);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AccountTransferTransactionsResponseAccountTransferTransactionsRsTransferTransactionListTransferTransactionInfo {\n");
    
    sb.append("    transactionDate: ").append(toIndentedString(transactionDate)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    debit: ").append(toIndentedString(debit)).append("\n");
    sb.append("    credit: ").append(toIndentedString(credit)).append("\n");
    sb.append("    transactionTime: ").append(toIndentedString(transactionTime)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    trnRefNum: ").append(toIndentedString(trnRefNum)).append("\n");
    sb.append("    memo: ").append(toIndentedString(memo)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

